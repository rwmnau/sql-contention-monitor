'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My
    
    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0"),  _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase
        
        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings()),MySettings)
        
#Region "My.Settings Auto-Save Functionality"
#If _MyType = "WindowsForms" Then
    Private Shared addedHandler As Boolean

    Private Shared addedHandlerLockObject As New Object

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
        If My.Application.SaveMySettingsOnExit Then
            My.Settings.Save()
        End If
    End Sub
#End If
#End Region
        
        Public Shared ReadOnly Property [Default]() As MySettings
            Get
                
#If _MyType = "WindowsForms" Then
               If Not addedHandler Then
                    SyncLock addedHandlerLockObject
                        If Not addedHandler Then
                            AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                            addedHandler = True
                        End If
                    End SyncLock
                End If
#End If
                Return defaultInstance
            End Get
        End Property
        
        '''<summary>
        '''semi-colon-separated list of servers to monitor
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("semi-colon-separated list of servers to monitor"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("")>  _
        Public Property ServerList() As String
            Get
                Return CType(Me("ServerList"),String)
            End Get
            Set
                Me("ServerList") = value
            End Set
        End Property
        
        '''<summary>
        '''Frequency of refreshing connections and getting status, in seconds
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Frequency of refreshing connections and getting status, in seconds"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("5")>  _
        Public Property RefreshFrequency() As Integer
            Get
                Return CType(Me("RefreshFrequency"),Integer)
            End Get
            Set
                Me("RefreshFrequency") = value
            End Set
        End Property
        
        '''<summary>
        '''Notify user when a block occurs
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Notify user when a block occurs"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property NotifyOnBlock() As Boolean
            Get
                Return CType(Me("NotifyOnBlock"),Boolean)
            End Get
            Set
                Me("NotifyOnBlock") = value
            End Set
        End Property
        
        '''<summary>
        '''Notify user when a block is cleared
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Notify user when a block is cleared"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property NotifyOnClear() As Boolean
            Get
                Return CType(Me("NotifyOnClear"),Boolean)
            End Get
            Set
                Me("NotifyOnClear") = value
            End Set
        End Property
        
        '''<summary>
        '''Minimum lock age, in seconds, after which to notify users. Prevents notification of momentary blocks.
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Minimum lock age, in seconds, after which to notify users. Prevents notification "& _ 
            "of momentary blocks."),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("10")>  _
        Public Property MinimumLockAge() As Integer
            Get
                Return CType(Me("MinimumLockAge"),Integer)
            End Get
            Set
                Me("MinimumLockAge") = value
            End Set
        End Property
        
        '''<summary>
        '''Whether MinimumLockAge settings will be respected
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Whether MinimumLockAge settings will be respected"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("False")>  _
        Public Property RespectMinimumLockAge() As Boolean
            Get
                Return CType(Me("RespectMinimumLockAge"),Boolean)
            End Get
            Set
                Me("RespectMinimumLockAge") = value
            End Set
        End Property
        
        '''<summary>
        '''True if user has been told that application minimizes to tray
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("True if user has been told that application minimizes to tray"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("False")>  _
        Public Property UserNotifiedAboutTray() As Boolean
            Get
                Return CType(Me("UserNotifiedAboutTray"),Boolean)
            End Get
            Set
                Me("UserNotifiedAboutTray") = value
            End Set
        End Property
        
        '''<summary>
        '''Notify the user if locks reach a certain age?
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Notify the user if locks reach a certain age?"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property NotifyOnLockAging() As Boolean
            Get
                Return CType(Me("NotifyOnLockAging"),Boolean)
            End Get
            Set
                Me("NotifyOnLockAging") = value
            End Set
        End Property
        
        '''<summary>
        '''Age of lock, in seconds, after which to notify user
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Age of lock, in seconds, after which to notify user"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("15")>  _
        Public Property NotifyOnLockAging_Age() As Integer
            Get
                Return CType(Me("NotifyOnLockAging_Age"),Integer)
            End Get
            Set
                Me("NotifyOnLockAging_Age") = value
            End Set
        End Property
        
        '''<summary>
        '''Continue to notify user as lock ages?
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Continue to notify user as lock ages?"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("True")>  _
        Public Property NotifyOnLockAgingReoccuring() As Boolean
            Get
                Return CType(Me("NotifyOnLockAgingReoccuring"),Boolean)
            End Get
            Set
                Me("NotifyOnLockAgingReoccuring") = value
            End Set
        End Property
        
        '''<summary>
        '''Delay, in seconds, between each subsequent recurring lock age notification
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Delay, in seconds, between each subsequent recurring lock age notification"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("30")>  _
        Public Property NotifyOnLockAgainReoccuringAge() As Integer
            Get
                Return CType(Me("NotifyOnLockAgainReoccuringAge"),Integer)
            End Get
            Set
                Me("NotifyOnLockAgainReoccuringAge") = value
            End Set
        End Property
        
        '''<summary>
        '''Maximum number of messages in tray notification queue at once. At capacity, oldest message is discarded.
        '''</summary>
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Maximum number of messages in tray notification queue at once. At capacity, oldes"& _ 
            "t message is discarded."),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("10")>  _
        Public ReadOnly Property MaximumQueueDepth() As Integer
            Get
                Return CType(Me("MaximumQueueDepth"),Integer)
            End Get
        End Property
        
        '''<summary>
        '''Number of lock history events to keep loaded
        '''</summary>
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Configuration.SettingsDescriptionAttribute("Number of lock history events to keep loaded"),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("1000")>  _
        Public Property LockHistoryDepth() As Integer
            Get
                Return CType(Me("LockHistoryDepth"),Integer)
            End Get
            Set
                Me("LockHistoryDepth") = value
            End Set
        End Property
    End Class
End Namespace

Namespace My
    
    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(),  _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()>  _
    Friend Module MySettingsProperty
        
        <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")>  _
        Friend ReadOnly Property Settings() As Global.VisualMonkey.SQLContention.My.MySettings
            Get
                Return Global.VisualMonkey.SQLContention.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace
